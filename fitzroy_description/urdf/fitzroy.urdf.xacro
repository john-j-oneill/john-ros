<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="fitzroy">
	<!-- roslaunch urdf_tutorial xacrodisplay.launch model:='$(find fitzroy_description)/urdf/tractorcustom.urdf.xacro' gui:='true'-->

  <xacro:include filename="$(find fitzroy_description)/urdf/fitzroy_common.urdf.xacro"/>


  <!-- The fake GPS needs an origin, it's an arg so it can be changed based on the world used. -->
  <!-- This is the origin of the gazebo world, NOT the place the robot is first dropped into. -->
  <xacro:arg name="latitude" default="0.0" />
  <xacro:arg name="longitude" default="0.0" />

  <xacro:arg name="use_velodyne" default="false" />


	<!-- Front Loader Properties-->
	<xacro:property name="framewidth" value="0.07" />
	<xacro:property name="frameheight" value="0.05" />
	<xacro:property name="thickness" value="0.01" />
	<xacro:property name="armsize" value="0.01" />
	<xacro:property name="armlen" value="0.10" />
	<xacro:property name="forkwidth" value="0.02" />
	<xacro:property name="forkheight" value="0.005" />
	<xacro:property name="forklen" value="0.1" />
	<xacro:property name="forksep" value="0.05" />
	<xacro:property name="basedepth" value="0.04" />
	<xacro:property name="liftmin" value="-0.5" />
	<xacro:property name="liftmax" value="0.5" />
	<xacro:property name="arm_x" value="0.028" />
	<xacro:property name="arm_z" value="-0.010" />
	<xacro:property name="frame_x" value="0.010" />
	<xacro:property name="frame_z" value="0.010" />

	<!-- chasis properties -->
	<xacro:property name="chasiswidth" value="0.080" />
	<xacro:property name="chasisheight" value="0.025" />
	<xacro:property name="chasislength" value="0.202" />
	<xacro:property name="chasismass" value="0.25"/>
	<!-- Backrack on tractor that Reed made-->
	<xacro:property name="rackheight" value="0.09" />
	<xacro:property name="rackback" value="-0.015" />

	<!-- Wheel properties-->
	<xacro:property name="rearwheeldia" value="0.064" />
	<xacro:property name="rearwheelwidth" value="0.025" />
	<xacro:property name="frontwheeldia" value="0.064" />
	<xacro:property name="frontwheelwidth" value="0.025" />
	<xacro:property name="wheelmass" value=".050"/>
	<xacro:property name="rearwheelsep" value="0.117"/>
	<xacro:property name="frontwheelsep" value="0.117"/>
	<xacro:property name="wheelbase" value="0.137"/>
	<xacro:property name="axlesize" value="0.007"/>
	<xacro:property name="turnmin" value="${-pi/4}" />
	<xacro:property name="turnmax" value="${pi/4}" />


	<!-- Wheel Friction -->
	<xacro:property name="wheelfriction1" value="2.0"/>
	<xacro:property name="wheelfriction2" value="2.0"/>
	<xacro:property name="wheelcontactstiffness" value="1000000.0"/>
	<xacro:property name="wheelcontactdamping" value="1.0"/>

	<!-- Wheel offsets-->
	<xacro:property name="front_shock_offset" value="0"/>
  <xacro:property name="rear_shock_offset" value="0"/>

	<!-- Motor properties (steer) -->
	<xacro:property name="steer_eff_limit" value="10000.0"/>
  <xacro:property name="steer_vel_limit" value="10.0"/>
	<xacro:property name="propel_eff_limit" value="100000.0"/>
  <xacro:property name="propel_vel_limit" value="50.0"/>

  <!-- Sensor Locations -->
  <xacro:property name="gps_y" value="-0.02"/>
  <xacro:property name="ranger_size" value="0.01"/>

	<!-- base footprint to make everything work better -->
  <link name="base_footprint">
  </link>


	<!-- base link for whole car ${wheelbase/2} -->
  <link name="base_link">
  </link>
	<joint name="base_footprint_to_base_link" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="${wheelbase/2} 0 ${rearwheeldia/2} "/>
  </joint>

	<!-- main chasis -->
	<xacro:cube_plastic
      name="chassis" 
      dimx="${chasislength}" 
      dimy="${chasiswidth}"
      dimz="${chasisheight}" />
	<joint name="base_link_to_chasis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 ${rear_shock_offset} "/>
  </joint>

	<!-- rear axle -->
	<xacro:cube_aluminum
      name="rear_axle" 
      dimx="${axlesize}" 
      dimy="${rearwheelsep-rearwheelwidth}"
      dimz="${axlesize}" />
	<joint name="base_link_to_rear_axle" type="fixed">
    <parent link="chassis"/>
    <child link="rear_axle"/>
    <origin xyz="${-wheelbase/2} 0 ${-chasisheight/2 - rear_shock_offset} "/>
  </joint>

	<!-- right rear wheel -->
  <link name="right_rear_wheel">
    <visual>
      <geometry>
        <cylinder length="${rearwheelwidth}" radius="${rearwheeldia/2}"/>
      </geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
			<material name="black"/>
    </visual>
		<collision>
			<geometry>
				<cylinder length="${rearwheelwidth}" radius="${rearwheeldia/2}"/>
			</geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
		</collision>
		<xacro:cylinder_inertial
          rad="${rearwheeldia / 2}"
					height="${rearwheelwidth}" mass="${wheelmass}"/>
  </link>
	<gazebo reference="right_rear_wheel">
		<mu1 value="${wheelfriction1}"/>
		<mu2 value="${wheelfriction2}"/>
		<kp value="${wheelcontactstiffness}" />
		<kd value="${wheelcontactdamping}" />
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<joint name="rear_axle_to_right_wheel" type="continuous">
		<axis xyz="0 1 0"/>
    <parent link="rear_axle"/>
    <child link="right_rear_wheel"/>
    <origin xyz="0 ${-rearwheelsep/2} 0"/>
		<limit effort="${propel_eff_limit}" velocity="${propel_vel_limit}"/>
  </joint>

	<!-- left rear wheel -->
  <link name="left_rear_wheel">
    <visual>
      <geometry>
        <cylinder length="${rearwheelwidth}" radius="${rearwheeldia/2}"/>
      </geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
			<material name="black"/>
    </visual>
		<collision>
			<geometry>
				<cylinder length="${rearwheelwidth}" radius="${rearwheeldia/2}"/>
			</geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
		</collision>
		<xacro:cylinder_inertial
          rad="${rearwheeldia / 2}"
					height="${rearwheelwidth}" mass="${wheelmass}"/>
  </link>
	<gazebo reference="left_rear_wheel">
		<mu1 value="${wheelfriction1}"/>
		<mu2 value="${wheelfriction2}"/>
		<kp value="${wheelcontactstiffness}" />
		<kd value="${wheelcontactdamping}" />
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<joint name="rear_axle_to_left_wheel" type="continuous">
		<axis xyz="0 1 0"/>
    <parent link="rear_axle"/>
    <child link="left_rear_wheel"/>
    <origin xyz="0 ${rearwheelsep/2} 0"/>
		<limit effort="${propel_eff_limit}" velocity="${propel_vel_limit}"/>
  </joint>


	<!-- front axle right -->
	<xacro:cube_aluminum
      name="front_axle_right" 
      dimx="${axlesize}" 
      dimy="${axlesize}"
      dimz="${axlesize}" />
	<joint name="base_link_to_front_axle_right" type="revolute">
		<axis xyz="0 0 1"/>
    <limit effort="${steer_eff_limit}" lower="${turnmin}" upper="${turnmax}" velocity="${steer_vel_limit}"/>
    <parent link="chassis"/>
    <child link="front_axle_right"/>
    <origin xyz="${wheelbase/2} ${-frontwheelsep/2} ${-chasisheight/2 - front_shock_offset} "/>
  </joint>

	<!-- front axle left -->
	<xacro:cube_aluminum
      name="front_axle_left" 
      dimx="${axlesize}" 
      dimy="${axlesize}"
      dimz="${axlesize}" />
	<joint name="base_link_to_front_axle_left" type="revolute">
		<axis xyz="0 0 1"/>
    <limit effort="${steer_eff_limit}" lower="${turnmin}" upper="${turnmax}" velocity="${steer_vel_limit}"/>
    <parent link="chassis"/>
    <child link="front_axle_left"/>
    <origin xyz="${wheelbase/2} ${frontwheelsep/2} ${-chasisheight/2 - front_shock_offset} "/>
  </joint>


	<!-- right front wheel -->
  <link name="right_front_wheel">
    <visual>
      <geometry>
        <cylinder length="${frontwheelwidth}" radius="${frontwheeldia/2}"/>
      </geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
			<material name="black"/>
    </visual>
		<collision>
			<geometry>
				<cylinder length="${frontwheelwidth}" radius="${frontwheeldia/2}"/>
			</geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
		</collision>
		<xacro:cylinder_inertial
          rad="${frontwheeldia / 2}"
					height="${frontwheelwidth}" mass="${wheelmass}"/>
  </link>
	<gazebo reference="right_front_wheel">
		<mu1 value="${wheelfriction1}"/>
		<mu2 value="${wheelfriction2}"/>
		<kp value="${wheelcontactstiffness}" />
		<kd value="${wheelcontactdamping}" />
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<joint name="front_axle_to_right_wheel" type="continuous">
		<axis xyz="0 1 0"/>
    <parent link="front_axle_right"/>
    <child link="right_front_wheel"/>
    <origin xyz="0 0 0"/>
		<limit effort="${propel_eff_limit}" velocity="${propel_vel_limit}"/>
  </joint>

	<!-- left front wheel -->
  <link name="left_front_wheel">
    <visual>
      <geometry>
       <cylinder length="${frontwheelwidth}" radius="${frontwheeldia/2}"/>
      </geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
			<material name="black"/>
    </visual>
		<collision>
			<geometry>
				<cylinder length="${frontwheelwidth}" radius="${frontwheeldia/2}"/>
			</geometry>
			<origin rpy="${pi/2} 0 0" xyz="0 0 0 "/>
		</collision>
		<xacro:cylinder_inertial
          rad="${frontwheeldia / 2}"
					height="${frontwheelwidth}" mass="${wheelmass}"/>
  </link>
	<gazebo reference="left_front_wheel">
		<mu1 value="${wheelfriction1}"/>
		<mu2 value="${wheelfriction2}"/>
		<kp value="${wheelcontactstiffness}" />
		<kd value="${wheelcontactdamping}" />
		<material>Gazebo/FlatBlack</material>
	</gazebo>
	<joint name="front_axle_to_left_wheel" type="continuous">
		<axis xyz="0 1 0"/>
    <parent link="front_axle_left"/>
    <child link="left_front_wheel"/>
    <origin xyz="0 0 0"/>
		<limit effort="${propel_eff_limit}" velocity="${propel_vel_limit}"/>
  </joint>




	<!-- START OF LOADER ARM STUFF -->
	<!-- dummy link to hold loader -->

<!--
  <link name="back_wall">
    <visual>
      <geometry>

      </geometry>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0 "/>
			<material name="grey"/>
    </visual>
		<collision>
			<geometry>
       <box size="0.001 0.001 0.001"/>
			</geometry>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0 "/>
		</collision>
		<xacro:default_inertial mass="1"/>
  </link>
	<gazebo reference="back_wall">
		<material>Gazebo/DarkGrey</material>
	</gazebo>

	<joint name="chassis_to_back" type="fixed">
    <parent link="chassis"/>
    <child link="back_wall"/>
    <origin xyz="${chasislength/2 - basedepth/2 + thickness/2} 0 ${chasisheight/2 + thickness/2}"/>
  </joint>
-->

	<!-- left arm -->
  <link name="left_arm">
    <visual>
      <geometry>
        <box size="${armlen} ${armsize} ${armsize}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="${armlen/2 - thickness/2} 0 0"/>
			<!-- <material name="red"/> -->
    </visual>
		<collision>
			<geometry>
        <box size="${armlen} ${armsize} ${armsize}"/>
			</geometry>
      <origin rpy="0 0 0" xyz="${armlen/2 - thickness/2} 0 0"/>
		</collision>
		<xacro:default_inertial mass="1"/>
  </link>
	<gazebo reference="left_arm">
		<material>Gazebo/Red</material>
	</gazebo>

	<joint name="back_to_left_arm" type="revolute">
		<axis xyz="0 -1 0"/>
    <limit effort="1000.0" lower="${liftmin}" upper="${liftmax}" velocity="0.5"/>
    <parent link="chassis"/>
    <child link="left_arm"/>
    <origin xyz="${arm_x} ${framewidth/2 - armsize/2} ${arm_z}"/>
  </joint>


	<!-- right arm -->
  <link name="right_arm">
    <visual>
      <geometry>
        <box size="${armlen} ${armsize} ${armsize}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="${armlen/2 - thickness/2} 0 0"/>
			<!-- <material name="red"/> -->
    </visual>
		<collision>
			<geometry>
        <box size="${armlen} ${armsize} ${armsize}"/>
			</geometry>
      <origin rpy="0 0 0" xyz="${armlen/2 - thickness/2} 0 0"/>
		</collision>
		<xacro:default_inertial mass="1"/>
  </link>
	<gazebo reference="right_arm">
		<material>Gazebo/Red</material>
	</gazebo>

	<joint name="back_to_right_arm" type="revolute">
		<axis xyz="0 -1 0"/>
    <limit effort="1000.0" lower="${liftmin}" upper="${liftmax}" velocity="0.5"/>
    <parent link="chassis"/>
    <child link="right_arm"/>
    <origin xyz="${arm_x} ${-framewidth/2 + armsize/2} ${arm_z}"/>
    <mimic  joint="back_to_left_arm" multiplier="1" offset="0"/>
  </joint>


	<!-- START OF FORK ASSEMBLY -->
	<!-- We use separate links for each part to have accurate physics properties -->

	<!-- fork assembly -->
  <link name="fork_assembly">
  </link>

	<!-- lift front wall with arm -->
	<joint name="left_arm_to_fork_assembly" type="revolute">
		<axis xyz="0 -1 0"/>
    <limit effort="1000.0" lower="${liftmin}" upper="${liftmax}" velocity="0.5"/>
    <parent link="left_arm"/>
    <child link="fork_assembly"/>
    <!-- <origin xyz="${armlen-thickness} ${-framewidth/2 - armsize/2} 0"/> -->
    <origin xyz="${armlen-thickness} ${-framewidth/2 + armsize/2} 0"/>
  </joint>


	<!-- backstop -->
	<xacro:cube_aluminum
      name="fork_backstop" 
      dimx="${frameheight}" 
      dimy="${framewidth}"
      dimz="${thickness}" />
	<joint name="fork_assembly_to_fork_backstop" type="fixed">
    <parent link="fork_assembly"/>
    <child link="fork_backstop"/>
		<origin rpy="0 ${pi/2} 0" xyz="${frame_x} 0 ${chasisheight-frame_z} "/>
  </joint>
	<!-- left fork -->
	<xacro:cube_aluminum
      name="left_fork" 
      dimx="${forkheight}" 
      dimy="${forkwidth}"
      dimz="${forklen}" />
	<joint name="fork_assembly_to_left_fork" type="fixed">
    <parent link="fork_assembly"/>
    <child link="left_fork"/>
    <origin rpy="0 ${pi/2} 0" xyz="${frame_x+forklen/2} ${ forksep/2} ${chasisheight-frame_z-frameheight/2} "/>
  </joint>
	<!-- right fork -->
	<xacro:cube_aluminum
      name="right_fork" 
      dimx="${forkheight}" 
      dimy="${forkwidth}"
      dimz="${forklen}" />
	<joint name="fork_assembly_to_right_fork" type="fixed">
    <parent link="fork_assembly"/>
    <child link="right_fork"/>
    <origin rpy="0 ${pi/2} 0" xyz="${frame_x+forklen/2} ${-forksep/2} ${chasisheight-frame_z-frameheight/2} "/>
  </joint>



	<!-- START OF THE TRANSMISSIONS STUFF (NECCESARY TO USE MOTOR CONTROL IN GAZEBO) -->
	<!-- Steering Transmissions -->
	<transmission name="right_steer_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_steer_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="base_link_to_front_axle_right">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
	<transmission name="left_steer_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_steer_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="base_link_to_front_axle_left">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

	<!-- Wheel transmissions -->
	<transmission name="right_front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_front_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_axle_to_right_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
	<transmission name="right_rear_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_rear_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_axle_to_right_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
	<transmission name="left_front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_front_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_axle_to_left_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
	<transmission name="left_rear_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_rear_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_axle_to_left_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>

	<!-- Loader arm transmissions -->
	<transmission name="left_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_arm_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="back_to_left_arm">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
	<transmission name="right_arm_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_arm_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="back_to_right_arm">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>
	<transmission name="left_grate_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_grate_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_arm_to_fork_assembly">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

	<!-- Specify Plugin for Gazebo-->
	<gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/fitzroy</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>





	<!-- Provide pose as an odom topic -->
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>4.0</updateRate> <!-- this controls the publish rate of pgn129026 messages -->
      <bodyName>base_link</bodyName>
      <topicName>ground_truth/state</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>


  </gazebo>



	<!-- Setup a fake gps sensor -->
	<joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
  </joint>
	<link name="gps_link">
	</link>
	<gazebo>
		<plugin name="novatel_gps_sim" filename="libnorthstar_gazebo_ros_gps.so">
		  <alwaysOn>1</alwaysOn>
		  <updateRate>10.0</updateRate>
		  <bodyName>gps_link</bodyName>
			<frameId>gps_link</frameId> <!-- 'frameId' not 'frameName'-->
		  <topicName>gps/fix</topicName>
		  <velocityTopicName>gps/fix_velocity</velocityTopicName>
		  <drift>0 0 0</drift>
		  <gaussianNoise>0.04 0.04 0.1</gaussianNoise>
		  <velocityDrift>0 0 0</velocityDrift>
		  <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
			<!-- Here we set the initial GPS location (Nordborg, DN)  default is in hamburg, germany-->
			<referenceLatitude>$(arg latitude)</referenceLatitude>
			<referenceLongitude>$(arg longitude)</referenceLongitude>
		</plugin>
	</gazebo>

	<!-- Setup a fake IMU sensor -->
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
	<link name="imu_link">
	</link>
	<gazebo>
		<!-- Old IMU plugin messes with frame_id: dont use libgazebo_ros_imu.so-->
    <plugin name="imu_plugin" filename="libhector_gazebo_ros_imu.so">
        <alwaysOn>true</alwaysOn>
        <bodyName>imu_link</bodyName>
				<frameId>imu_link</frameId> <!-- 'frameId' not 'frameName'-->
        <topicName>imu/data</topicName>
        <serviceName>imu/service</serviceName>
        <gaussianNoise>0.001</gaussianNoise>
        <updateRate>50.0</updateRate>
    </plugin>
	</gazebo>

	<!-- Camera -->
  <xacro:include filename="$(find fitzroy_description)/urdf/picam.urdf.xacro"/>
  <picam parent="base_link" name="camera">
    <origin xyz="${-(wheelbase/2 + rackback)} 0 ${rackheight}" rpy="0 0 0"/>
  </picam>

	<!-- Ultrasonic -->
  <xacro:include filename="$(find fitzroy_description)/urdf/ultrasonic_sensor.urdf.xacro"/>
  <ultrasonic_sensor parent="base_link" name="ultrasonic">
    <origin xyz="${-(wheelbase/2 + rackback)} 0.020 ${rackheight}" rpy="0 0 0"/>
  </ultrasonic_sensor>

</robot>



