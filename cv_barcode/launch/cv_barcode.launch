<launch>

  <arg name="camera_name" default="zbook_webcam"/>

  <!-- Webcam stuff. This works on my laptop, but for any other computer at least
       redo the calibration: http://wiki.ros.org/camera_calibration -->
  <node name="Jubilee" pkg="usb_cam" type="usb_cam_node">
    <param name="image_width" value="1280" />
    <param name="image_height" value="720" />
    <param name="camera_name" value="$(arg camera_name)" />
    <param name="camera_frame_id" value="$(arg camera_name)" />
    <param name="camera_info_url" value="file://$(find cv_barcode)/config/$(arg camera_name).yaml" />
    <param name="video_device" value="/dev/video0" />
  </node>

  <node pkg="cv_barcode" type="cv_barcode_node" name="Bakerloo" output="screen">
    <!-- The image itself. Should also have a camera_info that is valid. -->
    <remap from="image" to="/Jubilee/image_raw" />
    <!-- Publish out the image with the QR code(s) highlighted. 
         Will slow things down, but useful for debugging. 
         TODO: check to see if actually slower if no one subscribed anyways? -->
    <param name="publish_image" value="true" />
    <!-- Use cv::imshow to display the image to the user. 
         Will slow things down, and not very rossy, but useful for debugging. -->
    <param name="display_image" value="true" />
    <!-- This is an ugly hack to use pose msgs. Not great. -->
    <param name="qr_text_in_frameid" value="false" />
    <!-- Output debug text -->
    <param name="debug" value="false" />
    <!-- This is a list of prefixes and their corresponding sizes -->
    <rosparam param="qr_real_width_map">
     Fitz: 0.056
    </rosparam>
  </node>

  <arg name="rvizconfig" default="$(find cv_barcode)/rviz/cv_barcode.rviz" />
  <node name="Central" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

</launch>
