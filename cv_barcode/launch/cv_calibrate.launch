<launch>

  <arg name="camera_name" default="lifecam_right"/>

  <!-- Webcam stuff. This works on my laptop, but for any other computer at least
       redo the calibration: http://wiki.ros.org/camera_calibration
  <node name="Jubilee" pkg="usb_cam" type="usb_cam_node">
    <param name="image_width" value="1920" />
    <param name="image_height" value="1080" />
    <param name="camera_name" value="$(arg camera_name)" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="$(arg camera_name)" />
    <param name="video_device" value="/dev/lifecam_right" />
  </node> -->
  <!-- Raspberry Pi Camera V2 -->
  <node type="raspicam_node" pkg="raspicam_node" name="raspicam_node" output="screen">
    <param name="private_topics" value="true"/>

    <param name="camera_frame_id" value="raspicam"/>
    <param name="enable_raw" value="false"/>
    <param name="enable_imv" value="false"/>
    <param name="camera_id" value="0"/>

    <param name="camera_name" value="camerav2_1920x1080"/>
    <param name="width" value="1920"/>
    <param name="height" value="1080"/>

    <param name="framerate" value="10"/>
    <param name="exposure_mode" value="antishake"/>
    <param name="shutter_speed" value="0"/>
  </node>

  <!-- Republish as compressed for bagging -->
  <node pkg="image_transport" type="republish" name="$(anon repub)" args="compressed raw">
		<remap from="in"  to="/raspicam_node/image"/>
    <remap from="out" to="/raspicam_node/image"/>
  </node>

  <node pkg="camera_calibration" type="cameracalibrator.py" name="Bakerloo" output="screen" args=" --size 4x11 --square 0.020 --pattern acircles --no-service-check" >
    <!-- The image itself. Should also have a camera_info that is valid. -->
    <remap from="image" to="/raspicam_node/image" />
    <!-- Publish out the image with the QR code(s) highlighted. 
         Will slow things down, but useful for debugging. 
         TODO: check to see if actually slower if no one subscribed anyways? -->
    <param name="camera" value="my_camera" />
  </node>

</launch>
